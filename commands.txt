from news.models import User, Author, Post, Category, Comment

1) Создать двух пользователей (с помощью метода User.objects.create_user):
User.objects.create_user('Vasia', 'vasia@mail.ru', 'password')
User.objects.create_user('Sasha', 'Sasha@mail.ru', 'password')

2) Создать два объекта модели Author, связанные с пользователями:
guest_1 = User.objects.get(username = "Vasia")
author_1 = Author(user = guest_1, rating = 0)
author_1.save()

guest_2 = User.objects.get(username = "Sasha")
author_2 = Author(user = guest_2, rating = 0)
author_2.save()

3) Добавить 4 категории в модель Category:
category_1 = Category(name = 'Спорт')
category_1.save()

category_2 = Category(name = 'Политика')
category_2.save()

category_3 = Category(name = 'Культура')
category_3.save()

category_4 = Category(name = 'Наука')
category_4.save()

4) Добавить 2 статьи и 1 новость:
post_1 = Post(author = author_1, post_type='AR', header="Политика 1", text="Текст политической статьи", rating= 0)
post_1.save()

post_2 = Post(author = author_2, post_type='AR', header="Спорт 1", text="Текст спортивной статьи", rating= 0)
post_2.save()

post_3 = Post(author = author_2, post_type='NW', header="Спорт (нов.) 1", text="Текст спортивной новости", rating= 0)
post_3.save()

5) Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий):
post_1.category.set([category_1, category_2])
post_1.save()

post_2.category.set([category_1])
post_2.save()

post_3.category.set([category_1])
post_3.save()

6) Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий):
comment_1 = Comment(post = post_1, user = guest_1, text= "Хороший коммент", rating = 0)
comment_1.save()

comment_2 = Comment(post = post_2, user = guest_1, text= "Нейтральный коммент", rating = 0)
comment_2.save()

comment_3 = Comment(post = post_3, user = guest_2, text= "Негативный коммент", rating = 0)
comment_3.save()

comment_4 = Comment(post = post_1, user = guest_2, text= "Негативный коммент 2", rating = 0)
comment_4.save()

7) Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов:
post_1.like()

post_2.like()
post_2.like()

post_3.dislike()

comment_1.like()
comment_3.dislike()

comment_4.dislike()

8) Обновить рейтинги пользователей:
author_1.UpdateRating()
author_2.UpdateRating()

9) Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта):
Author.objects.all().order_by("-rating").values("user__username", "rating")[0]

10) Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье:
post = Post.objects.all().order_by("-rating")[0]
post.preview()
Post.objects.all().order_by("-rating").values("create_date", "author__user__username", "rating", "header")[0]

11) Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье:
Comment.objects.filter(post = post).values("text")